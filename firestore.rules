rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isSuperAdmin() {
      return isAuthenticated() && request.auth.token.email == 'biboandbobo2@gmail.com';
    }

    function isAdmin() {
      return isSuperAdmin() || (
        isAuthenticated() &&
        request.auth.token.role != null &&
        request.auth.token.role in ['admin', 'super-admin']
      );
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    match /admins/{adminId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }

    match /intro/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /prenatal/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /early-childhood/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /preschool/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /primary-school/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /adolescence/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /periods/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /profiles/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
    }

    match /notes/{noteId} {
      allow read: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() &&
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() &&
        resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() &&
        resource.data.userId == request.auth.uid;
    }

    match /topics/{topicId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    match /{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
