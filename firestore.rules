rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Проверяем, что пользователь аутентифицирован
    function isAuthenticated() {
      return request.auth != null;
    }

    // Проверяем, что пользователь — владелец документа
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Проверяем, что пользователь — администратор
    function isAdmin() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super-admin'];
    }

    // Проверяем, что пользователь — супер-администратор
    function isSuperAdmin() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super-admin';
    }

    // Коллекция пользователей
    match /users/{userId} {
      // Админы читают всё, пользователь читает только себя
      allow read: if isOwner(userId) || isAdmin();

      // Создание документа — только самим пользователем
      allow create: if isOwner(userId);

      // Обновление: пользователь может обновлять себя (кроме роли), либо супер-админ
      allow update: if (isOwner(userId) && !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role']))
                    || isSuperAdmin();

      // Удаление — только супер-админ
      allow delete: if isSuperAdmin();
    }

    // Старая коллекция админов (для обратной совместимости)
    match /admins/{adminId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }

    // Коллекции контента
    match /prenatal/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /early-childhood/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /preschool/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /primary-school/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /adolescence/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Профили пользователей
    match /profiles/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
    }

    // По умолчанию всё запрещено
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
